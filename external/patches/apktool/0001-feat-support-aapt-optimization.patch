From 2411d3662c919cf21fff617dd536de1e6ccfe497 Mon Sep 17 00:00:00 2001
From: Kofua <1638183271zjn@gmail.com>
Date: Sat, 30 Mar 2024 22:18:41 +0800
Subject: [PATCH] feat: support aapt optimization

---
 .../src/main/java/brut/apktool/Main.java      | 34 ++++++++++++++-
 .../main/java/brut/androlib/AaptInvoker.java  | 43 +++++++++++++++++++
 .../src/main/java/brut/androlib/Config.java   | 37 ++++++++++++++++
 3 files changed, 112 insertions(+), 2 deletions(-)

diff --git a/brut.apktool/apktool-cli/src/main/java/brut/apktool/Main.java b/brut.apktool/apktool-cli/src/main/java/brut/apktool/Main.java
index 914df043..dfa81cc6 100644
--- a/brut.apktool/apktool-cli/src/main/java/brut/apktool/Main.java
+++ b/brut.apktool/apktool-cli/src/main/java/brut/apktool/Main.java
@@ -308,9 +308,18 @@ public class Main {
         if (cli.hasOption("na") || cli.hasOption("no-apk")) {
             config.setNoApk(true);
         }
+        if (cli.hasOption("srp") || cli.hasOption("shorten-res-paths")) {
+            config.setShortenResPaths(true);
+        }
+        if (cli.hasOption("ese") || cli.hasOption("enable-sparse-encoding")) {
+            config.setEnableSparseEncoding(true);
+        }
+        if (cli.hasOption("crn") || cli.hasOption("collapse-res-names")) {
+            config.setCollapseResNames(true);
+        }
 
-        if (config.isNetSecConf() && config.getAaptVersion() == 1) {
-            System.err.println("-n / --net-sec-conf is not supported with legacy aapt.");
+        if ((config.isNetSecConf() || config.isShortenResPaths() || config.isEnableSparseEncoding() || config.isCollapseResNames()) && config.getAaptVersion() == 1) {
+            System.err.println("-n / --net-sec-conf, -srp / --shorten-res-paths, -ese / --enable-sparse-encoding, -crn / --collapse-res-names are not supported with legacy aapt.");
             System.exit(1);
         }
 
@@ -505,6 +514,21 @@ public class Main {
                 .desc("Disable repacking of the built files into a new apk.")
                 .build();
 
+        Option shortenResPathsOption = Option.builder("srp")
+                .longOpt("shorten-res-paths")
+                .desc("Shortens the paths of resources inside the APK.")
+                .build();
+
+        Option enableSparseEncodingOption = Option.builder("ese")
+                .longOpt("enable-sparse-encoding")
+                .desc("Enables encoding of sparse entries using a binary search tree. This option is useful for optimization of APK size but at the cost of resource retrieval performance.")
+                .build();
+
+        Option collapseResNamesOption = Option.builder("crn")
+                .longOpt("collapse-res-names")
+                .desc("Collapses resource names to a single value in the key string pool.")
+                .build();
+
         Option tagOption = Option.builder("t")
                 .longOpt("tag")
                 .desc("Tag frameworks using <tag>.")
@@ -555,6 +579,9 @@ public class Main {
             buildOptions.addOption(aapt1Option);
             buildOptions.addOption(noCrunchOption);
             buildOptions.addOption(noApkOption);
+            buildOptions.addOption(shortenResPathsOption);
+            buildOptions.addOption(enableSparseEncodingOption);
+            buildOptions.addOption(collapseResNamesOption);
         }
 
         // add global options
@@ -618,6 +645,9 @@ public class Main {
         allOptions.addOption(noCrunchOption);
         allOptions.addOption(noApkOption);
         allOptions.addOption(onlyMainClassesOption);
+        allOptions.addOption(shortenResPathsOption);
+        allOptions.addOption(enableSparseEncodingOption);
+        allOptions.addOption(collapseResNamesOption);
     }
 
     private static String verbosityHelp() {
diff --git a/brut.apktool/apktool-lib/src/main/java/brut/androlib/AaptInvoker.java b/brut.apktool/apktool-lib/src/main/java/brut/androlib/AaptInvoker.java
index 7210cf12..852aaf9b 100644
--- a/brut.apktool/apktool-lib/src/main/java/brut/androlib/AaptInvoker.java
+++ b/brut.apktool/apktool-lib/src/main/java/brut/androlib/AaptInvoker.java
@@ -23,6 +23,9 @@ import brut.util.AaptManager;
 import brut.util.OS;
 
 import java.io.*;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.StandardCopyOption;
 import java.nio.file.Paths;
 import java.util.*;
 import java.util.logging.Logger;
@@ -213,6 +216,46 @@ public class AaptInvoker {
         } catch (BrutException ex) {
             throw new AndrolibException(ex);
         }
+
+        if (mConfig.isShortenResPaths() || mConfig.isEnableSparseEncoding() || mConfig.isCollapseResNames()) {
+            Path inputFilePath = new File(apkFile.getParent(), apkFile.getName() + ".tmp").toPath();
+            Path apkFilePath = apkFile.toPath();
+            try {
+                Files.copy(apkFilePath, inputFilePath, StandardCopyOption.REPLACE_EXISTING);
+                Files.delete(apkFilePath);
+            } catch (IOException e) {
+                throw new AndrolibException(e);
+            }
+
+            cmd = new ArrayList<>();
+            cmd.add(aaptPath);
+            cmd.add("optimize");
+
+            cmd.add("-o");
+            cmd.add(apkFilePath.toString());
+
+            if (mConfig.isShortenResPaths()) {
+                cmd.add("--shorten-resource-paths");
+            }
+
+            if (mConfig.isEnableSparseEncoding()) {
+                cmd.add("--enable-sparse-encoding");
+            }
+
+            if (mConfig.isCollapseResNames()) {
+                cmd.add("--collapse-resource-names");
+            }
+
+            cmd.add(inputFilePath.toString());
+
+            try {
+                OS.exec(cmd.toArray(new String[0]));
+                LOGGER.fine("aapt2 optimize command ran: ");
+                LOGGER.fine(cmd.toString());
+            } catch (BrutException ex) {
+                throw new AndrolibException(ex);
+            }
+        }
     }
 
     private void invokeAapt1(File apkFile, File manifest, File resDir, File rawDir, File assetDir, File[] include,
diff --git a/brut.apktool/apktool-lib/src/main/java/brut/androlib/Config.java b/brut.apktool/apktool-lib/src/main/java/brut/androlib/Config.java
index 6b9c6809..95e1eef2 100644
--- a/brut.apktool/apktool-lib/src/main/java/brut/androlib/Config.java
+++ b/brut.apktool/apktool-lib/src/main/java/brut/androlib/Config.java
@@ -77,6 +77,12 @@ public final class Config {
     private boolean mNoCrunch;
     private boolean mNoApk;
 
+    // Optimize options, only supported by aapt2.
+    // see https://developer.android.com/tools/aapt2#optimize_options
+    private boolean mShortenResPaths;
+    private boolean mEnableSparseEncoding;
+    private boolean mCollapseResNames;
+
     // Decode options
     private short mDecodeSources;
     private short mDecodeResources;
@@ -107,6 +113,10 @@ public final class Config {
         mNoCrunch = false;
         mNoApk = false;
 
+        mShortenResPaths = false;
+        mEnableSparseEncoding = false;
+        mCollapseResNames = false;
+
         mDecodeSources = DECODE_SOURCES_SMALI;
         mDecodeResources = DECODE_RESOURCES_FULL;
         mForceDecodeManifest = FORCE_DECODE_MANIFEST_NONE;
@@ -199,6 +209,33 @@ public final class Config {
         mNoApk = noApk;
     }
 
+    // Optimize options, only supported by aapt2.
+    // see https://developer.android.com/tools/aapt2#optimize_options
+
+    public boolean isShortenResPaths() {
+        return mShortenResPaths;
+    }
+
+    public void setShortenResPaths(boolean shortenResPaths) {
+        mShortenResPaths = shortenResPaths;
+    }
+
+    public boolean isEnableSparseEncoding() {
+        return mEnableSparseEncoding;
+    }
+
+    public void setEnableSparseEncoding(boolean enableSparseEncoding) {
+        mEnableSparseEncoding = enableSparseEncoding;
+    }
+
+    public boolean isCollapseResNames() {
+        return mCollapseResNames;
+    }
+
+    public void setCollapseResNames(boolean collapseResNames) {
+        mCollapseResNames = collapseResNames;
+    }
+
     // Decode options
 
     public short getDecodeSources() {
-- 
2.47.1

